#!/bin/sh

# Where am I?
SCRIPT=$(readlink -f "$0")
REPO_DIR=$(dirname "$SCRIPT")

VIMRC="$HOME/.vimrc"
TMUX_CONF="$HOME/.tmux.conf"

echo "ME: $SCRIPT"
echo "REPO: $REPO_DIR"

DEPENDENCIES="vim-nox \
	git \
	tmux \
	build-essential \
	cmake \
	python-dev \
	python3-dev \
	exuberant-ctags \
	sudo \
	curl \
	zsh \
"

# --- Check required dependencies are installed ---

if [ ! $(which apt-get &> /dev/null) ] ||
	[ ! $(which dpkg &> /dev/null) ]; then
	echo "This does not look like a Debian-based system"
	echo "Please manually check the equivalent packages are installed on your system:"

	for pkg in $DEPENDENCIES; do
		echo "$pkg"
	done

	while true; do
		read -p "Are all the dependencies installed? Continue? (y/n)" ans
		case $ans in
			[Yy]*)
				break
				;;
			[Nn]*)
				exit 1
				break
				;;
			*)
				echo "Try again ..."
				;;
		esac
	done
else
	# This is a Debain-based system.
	# Install dependencies

	echo "Installing required dependencies"

	for pkg in $DEPENDENCIES; do
		if [ ! "$(dpkg -S $pkg &> /dev/null)" ]; then
			echo "Installing $pkg"
			if [ ! "$(sudo apt-get install -y $pkg)" ]; then
				echo "Attempt to install $pkg failed"
				exit 1
			fi
		fi
	done
fi

# Depedencies should be sorted now.
# Start setting up programs.
echo "Dependencies done."

# ---- Setup Vim ----

echo "Setup $VIMRC"
LINK_VIMRC="ln -sf $REPO_DIR/vimrc $VIMRC"
if [ -e "$VIMRC" ]; then
	while true; do
		read -p "$VIMRC already exists, overwrite? (y/n)" ans
		case $ans in
			[Yy]*)
				echo "Creating link to $VIMRC"
				eval "$LINK_VIMRC"
				break
				;;
			[Nn]*)
				break
				;;
			*)
				echo "Try again ..."
				;;
		esac
	done
else
	echo "Creating link to $VIMRC"
	eval "$LINK_VIMRC"
fi

mkdir -p "$HOME/.vim-backupsdir"
mkdir -p "$HOME/.vim-swapdir"

BUNDLE_DIR="$HOME/.vim/bundle"
VUNDLE_DIR="$BUNDLE_DIR/vundle"
if [ ! -d "$VUNDLE_DIR" ]; then
	echo "Installing Vundle"
	git clone "https://github.com/VundleVim/Vundle.vim.git" "$HOME/.vim/bundle/vundle"
fi

echo "Installing Vim plugins"
vim +PluginInstall +qall

while true; do
	read -p "Compile YouCompleteMe plugin? (y/n)" ans
	case $ans in
		[Yy]*)
			echo "Compiling YouCompleteMe plugin"
			YCM_DIR="$BUNDLE_DIR/YouCompleteMe"
			CURRENT_DIR=$(pwd)
			cd "$YCM_DIR"
			./install.py --clang-completer
			cd "$CURRENT_DIR"
			break
			;;
		[Nn]*)
			break
			;;
		*)
			echo "Try again ..."
			;;
	esac
done

# ---- Setup tmux ----

echo "Setup $TMUX_CONF"
LINK_TMUX="ln -sf $REPO_DIR/tmux.conf $TMUX_CONF"
if [ -e "$TMUX_CONF" ]; then
	while true; do
		read -p "$TMUX_CONF already exists, overwrite? (y/n)" ans
		case $ans in
			[Yy]*)
				echo "Creating link to $TMUX_CONF"
				eval "$LINK_TMUX"
				break
				;;
			[Nn]*)
				break
				;;
			*)
				echo "Try again ..."
				;;
		esac
	done
else
	echo "Creating link to $TMUX_CONF"
	eval "$LINK_TMUX"
fi

# ---- Setup zsh ----

while true; do
	read -p "Install Oh My Zsh? (y/n)" ans
	case $ans in
		[Yy]*)
			sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
			break
			;;
		[Nn]*)
			break
			;;
		*)
			echo "Try again ..."
			;;
	esac
done

echo "All done :-)"
exit 0
